import numpy as np
import cv2
import pickle

face_cascade_1 = cv2.CascadeClassifier('/home/shobhik/haaar/haarcascade_frontalface_alt.xml')
face_cascade_2 = cv2.CascadeClassifier('/home/shobhik/haaar/haarcascade_profileface.xml')

recognizer = cv2.face.LBPHFaceRecognizer_create()
recognizer.read('trainer.yml')

labels={"person_name": 1}
with open('labels.pickle','rb') as f:
	og_labels=pickle.load(f)
	labels = {v:k for k,v in og_labels.items()}
	

cap = cv2.VideoCapture(0)

while(True):
	ret , frame = cap.read()
	gray = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
	faces_1 = face_cascade_1.detectMultiScale(gray,scaleFactor=1.5,minNeighbors=5)
	faces_2 = face_cascade_2.detectMultiScale(gray,scaleFactor=1.5,minNeighbors=5)
	for(x,y,w,h) in faces_1:
		roi_gray = gray[y:y+h,x:x+w]
		roi_color = frame[y:y+h,x:x+w]

		id_,conf = recognizer.predict(roi_gray)

		if conf>=45:
			font = cv2.FONT_HERSHEY_SIMPLEX
			name = labels[id_]
			color=(255,255,255)
			thickness = 2
			cv2.putText(frame,name,(x,y),font,1,color,thickness,cv2.LINE_AA)

		img = "my_image.png"
		cv2.imwrite(img,roi_gray)

		color = (0,255,0)
		thickness = 2
		end_point_x = x+w
		end_point_y = y+h
		cv2.rectangle(frame,(x,y),(end_point_x,end_point_y),color,thickness)
	for(x,y,w,h) in faces_2:
		roi_gray = gray[y:y+h,x:x+w]
		roi_color = frame[y:y+h,x:x+w]

		img = "my_image.png"
		cv2.imwrite(img,roi_gray)

		color = (0,255,0)
		thickness = 2
		end_point_x = x+w
		end_point_y = y+h
		cv2.rectangle(frame,(x,y),(end_point_x,end_point_y),color,thickness)
	cv2.imshow('Image_window',frame)
	if cv2.waitKey(20)&0xFF==ord('q'):
		break

cap.release()
cv2.destroyAllWindows()
